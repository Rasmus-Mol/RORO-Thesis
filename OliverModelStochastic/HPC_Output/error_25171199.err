Loaded module: julia/1.11.3
Loaded module: gurobi/12.0.1
  Activating project at `~/RORO-Thesis/OliverModelStochastic`
[ Info: Creating vessel object for 'finlandia'
[ Info: All required files found, loading vessel data...
┌ Info: Successfully created vessel object
│   name = "FINLANDIA"
└   IMO = 9198721
[ Info: Simplifying vessel with target points: 50
[ Info: Creating vessel object for 'finlandia'
[ Info: All required files found, loading vessel data...
┌ Info: Successfully created vessel object
│   name = "FINLANDIA"
└   IMO = 9198721
[ Info: Simplifying vessel with target points: 50
ERROR: LoadError: BoundsError: attempt to access 117×957 Matrix{Float64} at index [118, 1]
Stacktrace:
  [1] throw_boundserror(A::Matrix{Float64}, I::Tuple{Int64, Int64})
    @ Base ./essentials.jl:14
  [2] checkbounds
    @ ./abstractarray.jl:699 [inlined]
  [3] getindex
    @ ./array.jl:929 [inlined]
  [4] macro expansion
    @ ~/.julia/packages/MutableArithmetics/gYzox/src/rewrite.jl:371 [inlined]
  [5] macro expansion
    @ ~/.julia/packages/JuMP/xlp0s/src/macros.jl:264 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/JuMP/xlp0s/src/macros/@constraint.jl:171 [inlined]
  [7] #1038
    @ ~/.julia/packages/JuMP/xlp0s/src/Containers/macro.jl:550 [inlined]
  [8] #84
    @ ~/.julia/packages/JuMP/xlp0s/src/Containers/container.jl:85 [inlined]
  [9] iterate
    @ ./generator.jl:48 [inlined]
 [10] collect_to!(dest::Matrix{ConstraintRef{Model, MathOptInterface.ConstraintIndex{MathOptInterface.ScalarAffineFunction{Float64}, MathOptInterface.EqualTo{Float64}}, ScalarShape}}, itr::Base.Generator{JuMP.Containers.VectorizedProductIterator{Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}, JuMP.Containers.var"#84#85"{var"#1038#1063"{Matrix{Float64}, Matrix{VariableRef}, Model}}}, offs::Int64, st::Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}})
    @ Base ./array.jl:849
 [11] collect_to_with_first!
    @ ./array.jl:827 [inlined]
 [12] collect(itr::Base.Generator{JuMP.Containers.VectorizedProductIterator{Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}, JuMP.Containers.var"#84#85"{var"#1038#1063"{Matrix{Float64}, Matrix{VariableRef}, Model}}})
    @ Base ./array.jl:801
 [13] map(f::Function, A::JuMP.Containers.VectorizedProductIterator{Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    @ Base ./abstractarray.jl:3399
 [14] container
    @ ~/.julia/packages/JuMP/xlp0s/src/Containers/container.jl:85 [inlined]
 [15] container
    @ ~/.julia/packages/JuMP/xlp0s/src/Containers/container.jl:71 [inlined]
 [16] container(f::Function, indices::JuMP.Containers.VectorizedProductIterator{Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}, ::Type{JuMP.Containers.AutoContainerType}, names::Vector{Any})
    @ JuMP.Containers ~/.julia/packages/JuMP/xlp0s/src/Containers/container.jl:75
 [17] macro expansion
    @ ~/.julia/packages/JuMP/xlp0s/src/macros.jl:400 [inlined]
 [18] second_stage_model(cs1::Matrix{Float64}, problem::StowageProblem)
    @ Main ~/RORO-Thesis/OliverModelStochastic/src/model/second_stage_model.jl:25
 [19] top-level scope
    @ ~/RORO-Thesis/OliverModelStochastic/main_small_test.jl:35
in expression starting at /zhome/e3/5/146953/RORO-Thesis/OliverModelStochastic/main_small_test.jl:35
